@page "/counter"
@using CpCinemaBlazor.ApiRequest
@using CpCinemaBlazor.ApiRequest.Model
@using static CpCinemaBlazor.ApiRequest.Model.User
@using Microsoft.AspNetCore.Components.Routing
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

@if (isLoading)
{
    <p class="text-center">Loading...</p>
}
else if (!isAdmin)
{
    <p class="text-center alert alert-danger">
        У вас нет прав для просмотра этой страницы.
    </p>
}
else
{
    <input @bind="addUser.Name" />
    <input @bind="addUser.AboutMe" />
    <input @bind="addUser.Email" />
    <input @bind="addUser.Password" />
    <input type="checkbox" @bind="addUser.Admin" />
    <button @onclick="CreateUser" class="button-17" role="button">Добавить</button>

    <p class="text-center fw-bold mb-5 mx-1 mx-md-4 mt-4">
        <table class="table table-bordered">
            <thead class="alert-dark">
                <tr>
                    <td>id_User</td>
                    <td>Name</td>
                    <td>AboutMe</td>
                    <td>Email</td>
                    <td>Password</td>
                    <td>Edit</td>
                </tr>
            </thead>
            <tbody>
                @if (users == null)
                {
                    <tr>
                        <td colspan="6" class="text-center">Loading...</td>
                    </tr>
                }
                else if (!users.Any())
                {
                    <tr>
                        <td colspan="6" class="text-center">No users found</td>
                    </tr>
                }
                else
                {
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.id_User</td>
                            <td>
                                @if (user.Edit)
                                {
                                    <input @bind="@user.Name" placeholder="Имя" pattern="[а-яА-Я]+" />
                                }
                                else
                                {
                                    @user.Name
                                }
                            </td>
                            <td>
                                @if (user.Edit)
                                {
                                    <input @bind="@user.AboutMe" placeholder="О себе" pattern="[а-яА-Я]+" />
                                }
                                else
                                {
                                    @user.AboutMe
                                }
                            </td>
                            <td>
                                @if (user.Edit)
                                {
                                    <input @bind="@user.Email" placeholder="Почта" />
                                }
                                else
                                {
                                    @user.Email
                                }
                            </td>
                            <td>
                                @if (user.Edit)
                                {
                                    <input @bind="@user.Password" placeholder="Пароль" />
                                }
                                else
                                {
                                    @user.Password
                                }
                            </td>
                            <td>
                                @if (user.Edit)
                                {
                                    <button @onclick="() => SaveUser(user)">Сохранить</button>
                                    <button @onclick="() => CancelUser(user)">Отмена</button>
                                }
                                else
                                {
                                    <button @onclick="() => EditUser(user)">Изменить</button>
                                    <button @onclick="() => DeleteUser(user)">Удалить</button>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </p>
}

@code {
    private List<UserDataShort> users;
    private bool isLoading = true;

    AddUser addUser = new AddUser();

    CurUser curUser;
    bool isAdmin = false;
    bool isAuth = false;

    [Inject] private ApiRequestService ApiRequest { get; set; }
    [Inject] private NavigationManager Navigation { get; set; }
    [Inject] private SingletoneUser SingletoneUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        curUser = SingletoneUser.CurrentUser;

        isAuth = curUser != null;
        isAdmin = curUser?.isAdmin == true;

        Console.WriteLine($"CurrentUser: {curUser?.Name}, IsAdmin: {isAdmin}, IsAuth: {isAuth}");

        isLoading = false;

        if (!isAuth || !isAdmin)
        {
            Navigation.NavigateTo("/");
            return;
        }

        await GetUsers();
    }

    private async Task GetUsers()
    {
        var userData = await ApiRequest.GetUsersAsync();
        users = userData ?? [];
        StateHasChanged();
    }

    void EditUser(UserDataShort user)
    {
        user.Edit = true;
    }

    async Task DeleteUser(UserDataShort user)
    {
        await ApiRequest.DeleteUserAsync(user.id_User);
        await GetUsers();
    }

    void CancelUser(UserDataShort user) => user.Edit = false;

    async Task SaveUser(UserDataShort user)
    {
        user.Edit = false;

        if (!string.IsNullOrWhiteSpace(user.Name) &&
            !string.IsNullOrWhiteSpace(user.AboutMe) &&
            !string.IsNullOrWhiteSpace(user.Email) &&
            !string.IsNullOrWhiteSpace(user.Password))
        {
            UserProd userProd = new UserProd
                {
                    id_User = user.id_User,
                    Name = user.Name,
                    AboutMe = user.AboutMe,
                    Email = user.Email,
                    Password = user.Password
                };

            await ApiRequest.EditUserAsync(userProd);
        }

        await GetUsers();
    }

    private void CreateUser()
    {
        ApiRequest.CreateUserLoginAsync(addUser);
        GetUsers();
    }
}